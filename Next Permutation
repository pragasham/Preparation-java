class Solution {
    public void nextPermutation(int[] nums) {
       int n=nums.length;
       int index=-1;
       for(int i=n-2;i>=0;i--){
        if(nums[i]<nums[i+1]){
            index=i;
            break;
        }
       }
        if(index==-1){
            reversefull(nums);
            return;
        }
        for(int i=n-1;i>index;i--){
            if(nums[i]>nums[index]){
                swap(nums,i,index);
                break;
            }
        }
        reverse(nums,index+1,n-1);

       
    }
   static void reversefull(int[] arr) {
        int start = 0;
        int end = arr.length - 1;
        
        while (start < end) {
            int temp = arr[start];
            arr[start] = arr[end];
            arr[end] = temp;
            
            start++;
            end--;
        }
        }
    static void swap(int [] nums,int i,int index){
        int tem=nums[i];
        nums[i]=nums[index];
        nums[index]=tem;
    }
    static void reverse(int [] nums,int start,int end){
        while(start<end){
            int tem=nums[start];
            nums[start]=nums[end];
            nums[end]=tem;
            start++;
            end--;
        }
    }
}
